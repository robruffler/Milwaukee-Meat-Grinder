<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

<!-- Commenting out AOP stuff for now, will revisit later 
  <context:component-scan base-package="com.springhibernate.integration.aspects" />
 -->

  <!--Enables the use of @AspectJ style of aspects' declarations. AspectJ run-time isn't necessarily involved-->
<!--   
  <aop:aspectj-autoproxy/>
 -->
 
  <!--Platform Transaction Manager declared as "transactionManager" will be used.-->
  <!--"aspectj" mode enables load-time/compile-time weaving of transactional methods, which enables
   those methods to be intercepted even when called internally.
   (Unlike Spring generated proxies which will only be intercepted when called from outside)--> 
  <tx:annotation-driven/>
<!-- swapping out for annotated session factory  
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
 -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
    <property name="dataSource" ref="dataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="show_sql">true</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>com.fauxwerd.model.Content</value>
        <value>com.fauxwerd.model.User</value>
      </list>
    </property>
<!--     
    <property name="mappingResources">
      <list>
        <value>mappings/content.hbm.xml</value>
        <value>mappings/user.hbm.xml</value>
      </list>
    </property>
 -->         
    <property name="configurationClass">
      <value>org.hibernate.cfg.AnnotationConfiguration</value>
    </property>        
  </bean>
  
<!-- Removing unneccessary complexity
  <context:property-placeholder location="classpath*:/META-INF/properties/*.properties"/>
-->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/fauxwerd"/>
    <property name="username" value="fauxwerd"/>
    <property name="password" value="f@uxw3rd"/>
  </bean>
 
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!--repository init area-->
<!-- Don't think we really need this 
  <bean id="repository.users" class="com.springhibernate.integration.repository.HibernateUserBase"
        autowire="constructor"/>
 -->  
</beans>