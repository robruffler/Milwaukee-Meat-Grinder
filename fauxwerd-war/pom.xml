<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fauxwerd</groupId>
  <artifactId>fauxwerd</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Fauxwerd</name>
  <url>http://maven.apache.org</url>

  <!-- list of maven repositories to check for dependencies  -->  
  <repositories>
    <repository>
      <id>maven-central</id>
      <name>default maven repo</name>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>jboss-maven</id>
      <name>home of the latest hibernate dependencies</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>
  </repositories>
  
   <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>http://repo1.maven.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>jboss-maven</id>
      <name>home of the latest hibernate dependencies</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>    
    </pluginRepository>
  </pluginRepositories>  
  
  <!-- Shared version number properties -->
  <properties>
      <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
      <org.hibernate.version>3.6.0.Final</org.hibernate.version>
      <org.slf4j.version>1.6.1</org.slf4j.version>      
  </properties>

  <dependencies>
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${org.springframework.version}</version>
      <exclusions>
        <!-- Exclude Commons Logging in favor of SLF4j -->        
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>      
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>
    
    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-openid</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
      <exclusions>
        <!-- Exclude Commons Logging in favor of SLF4j -->        
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>            
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-taglibs</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${org.springframework.version}</version>
      <scope>compile</scope>
    </dependency>        
    
    <!-- c3po Datasource-->
    <dependency>
    	<groupId>c3p0</groupId>
    	<artifactId>c3p0</artifactId>
    	<version>0.9.1.2</version>
    </dependency>
    
    <!-- MySQL Connector (used for db driver) -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.12</version>
    </dependency>
    
    <!-- HSQLDB -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.10</version>
      <!-- bug in version 2.0.0 that breaks boolean mappings -->
      <!--  <version>2.0.0</version> -->
    </dependency>    
    
    <!-- Hibernate gives you a choice of bytecode providers between cglib and javassist -->
    <!-- javassist (need to investigate this one further, but hibernate breaks without it) jboss related? -->
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.12.1.GA</version>
    </dependency>    
                
    <!-- AspectJ -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.6.9</version>
    </dependency>
    
    <!-- AOP dependency -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2</version>
    </dependency>    
        
    <!-- Hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${org.hibernate.version}</version>
    </dependency>

    <!-- Logging -->    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${org.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
      <scope>runtime</scope>
    </dependency>

    <!--  JSR 303 with Hibernate Validator -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>4.0.2.GA</version>
    </dependency>   

    <!--  Joda Time -->    
<!-- something in this dependency breaks tomcat, commenting out until we really need it
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.6.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time-jsptags</artifactId>
      <version>1.0.1</version>
      <scope>runtime</scope>
    </dependency>
 -->     
 
    <!--  URL Rewrite -->
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>3.1.0</version>
    </dependency>
    
    <!-- Quartz Dependencies -->
    <dependency>
        <groupId>opensymphony</groupId>
        <artifactId>quartz-all</artifactId>
        <version>1.6.1</version>
    </dependency>
    <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2</version>
    </dependency>    

    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>        
  </dependencies>

  <build>
    <finalName>ROOT</finalName>
    <plugins>

      <!-- Cargo Maven plugin to deploy compiled war to tomcat -->
      <plugin>
      	<groupId>org.codehaus.cargo</groupId>
      	<artifactId>cargo-maven2-plugin</artifactId>
      	<version>1.0.4</version>
      	<configuration>
      	  <container>
      	    <containerId>tomcat6x</containerId>
      	  </container>
      	  <configuration>
      	    <type>existing</type>
      	    <home>/env/tomcat/apache-tomcat-6.0.29</home>
      	  </configuration>		
      	</configuration>      	
      </plugin>

      <!-- Jetty Maven plugin to run site locally -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.2.1.v20101111</version>
        <configuration>
          <systemProperties>
            <systemProperty>
              <name>server.stage</name>
              <value>local</value>
            </systemProperty>              
          </systemProperties>
        </configuration>
      </plugin>

      <!-- Sets compilation target to 1.6 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      
      <!-- Liquibase plugin for database versioning -->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>2.0.0</version>
        <configuration>
            <changeLogFile>liquibase/db-changelog-master.xml</changeLogFile>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/fauxwerd</url>
            <username>fauxwerd</username>
            <password>f@uxw3rd</password>
            <logging>info</logging>
            <rollbackCount>1</rollbackCount>
        </configuration>        
<!-- setting this to be called by hudson after packaging the project, may need to revisit when/if we start unit testing 
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
-->        
      </plugin>      
      
      <!-- Hibernate 3 Maven plugin to generate schema DDL, etc -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>hibernate3-maven-plugin</artifactId>
        <version>3.0-SNAPSHOT</version>        
        <configuration>
          <hibernatetool>
            <annotationconfiguration configurationfile="src/etc/hibernate.cfg.xml" />
            <hbm2ddl console="true" export="false" update="false" drop="false" create="true" format="true" outputfilename="schema.ddl"/>
          </hibernatetool>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.12</version>
          </dependency>
        </dependencies>
      </plugin>     
    </plugins>    
  </build>
</project>
